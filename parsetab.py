
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "IF INCR INTEGER PLUS TYPE TYPE TYPE VARIABLE function_list : function function_list  function_list : empty  function : TYPE VARIABLE '(' arguments ')' '{' body '}'  arguments : TYPE VARIABLE  arguments : TYPE VARIABLE ',' arguments  arguments : TYPE  arguments : TYPE ',' arguments body : line bodybody : emptyline : declarationline : assignmentline : if_clausedeclaration : TYPE variable_list ';' variable_list : VARIABLEvariable_list : VARIABLE ',' variable_list assignment : VARIABLE '=' expr_1 ';' \n    expr_1 : expr_2 '>' expr_1\n           | expr_2 '<' expr_1\n    \n    expr_1 : expr_2\n    \n    expr_2 : expr_3 PLUS expr_2\n           | expr_3 '-' expr_2\n    \n    expr_2 : expr_3\n    \n    expr_3 : expr_4 '*' expr_3\n           | expr_4 '/' expr_3\n    \n    expr_3 : expr_4\n    \n    expr_4 : '-' expr_5\n           | expr_5\n    \n    expr_5 : VARIABLE INCR\n    \n    expr_5 : expr_6\n    \n    expr_6 : INTEGER\n           | VARIABLE\n           | '(' expr_1 ')'\n    \n    if_clause : IF '(' expr_1 ')' '{' body '}'\n    empty : "
    
_lr_action_items = {'TYPE':([0,2,7,11,13,15,20,22,23,24,29,32,47,64,66,],[4,4,8,8,8,17,17,-10,-11,-12,-3,-13,-16,17,-33,]),'$end':([0,1,2,3,5,29,],[-34,0,-34,-2,-1,-3,]),'VARIABLE':([4,8,15,17,20,22,23,24,28,31,32,33,38,43,47,48,49,50,51,53,54,64,66,],[6,10,18,27,18,-10,-11,-12,34,34,-13,27,34,34,-16,34,34,34,34,34,34,18,-33,]),'(':([6,25,28,31,38,43,48,49,50,51,53,54,],[7,31,43,43,43,43,43,43,43,43,43,43,]),')':([8,9,10,14,16,34,36,37,39,40,41,42,44,46,52,55,57,58,59,60,61,62,63,],[-6,12,-4,-7,-5,-31,-19,-22,-25,-27,-29,-30,56,-28,-26,63,-17,-18,-20,-21,-23,-24,-32,]),',':([8,10,27,],[11,13,33,]),'{':([12,56,],[15,64,]),'}':([15,19,20,21,22,23,24,30,32,47,64,65,66,],[-34,29,-34,-9,-10,-11,-12,-8,-13,-16,-34,66,-33,]),'IF':([15,20,22,23,24,32,47,64,66,],[25,25,-10,-11,-12,-13,-16,25,-33,]),'=':([18,],[28,]),';':([26,27,34,35,36,37,39,40,41,42,45,46,52,57,58,59,60,61,62,63,],[32,-14,-31,47,-19,-22,-25,-27,-29,-30,-15,-28,-26,-17,-18,-20,-21,-23,-24,-32,]),'-':([28,31,34,37,39,40,41,42,43,46,48,49,50,51,52,53,54,61,62,63,],[38,38,-31,51,-25,-27,-29,-30,38,-28,38,38,38,38,-26,38,38,-23,-24,-32,]),'INTEGER':([28,31,38,43,48,49,50,51,53,54,],[42,42,42,42,42,42,42,42,42,42,]),'INCR':([34,],[46,]),'*':([34,39,40,41,42,46,52,63,],[-31,53,-27,-29,-30,-28,-26,-32,]),'/':([34,39,40,41,42,46,52,63,],[-31,54,-27,-29,-30,-28,-26,-32,]),'PLUS':([34,37,39,40,41,42,46,52,61,62,63,],[-31,50,-25,-27,-29,-30,-28,-26,-23,-24,-32,]),'>':([34,36,37,39,40,41,42,46,52,59,60,61,62,63,],[-31,48,-22,-25,-27,-29,-30,-28,-26,-20,-21,-23,-24,-32,]),'<':([34,36,37,39,40,41,42,46,52,59,60,61,62,63,],[-31,49,-22,-25,-27,-29,-30,-28,-26,-20,-21,-23,-24,-32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function_list':([0,2,],[1,5,]),'function':([0,2,],[2,2,]),'empty':([0,2,15,20,64,],[3,3,21,21,21,]),'arguments':([7,11,13,],[9,14,16,]),'body':([15,20,64,],[19,30,65,]),'line':([15,20,64,],[20,20,20,]),'declaration':([15,20,64,],[22,22,22,]),'assignment':([15,20,64,],[23,23,23,]),'if_clause':([15,20,64,],[24,24,24,]),'variable_list':([17,33,],[26,45,]),'expr_1':([28,31,43,48,49,],[35,44,55,57,58,]),'expr_2':([28,31,43,48,49,50,51,],[36,36,36,36,36,59,60,]),'expr_3':([28,31,43,48,49,50,51,53,54,],[37,37,37,37,37,37,37,61,62,]),'expr_4':([28,31,43,48,49,50,51,53,54,],[39,39,39,39,39,39,39,39,39,]),'expr_5':([28,31,38,43,48,49,50,51,53,54,],[40,40,52,40,40,40,40,40,40,40,]),'expr_6':([28,31,38,43,48,49,50,51,53,54,],[41,41,41,41,41,41,41,41,41,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> function_list","S'",1,None,None,None),
  ('function_list -> function function_list','function_list',2,'p_function_list','mini_c.py',68),
  ('function_list -> empty','function_list',1,'p_function_list_empty','mini_c.py',72),
  ('function -> TYPE VARIABLE ( arguments ) { body }','function',8,'p_function_body','mini_c.py',88),
  ('arguments -> TYPE VARIABLE','arguments',2,'p_argunments_names_one','mini_c.py',98),
  ('arguments -> TYPE VARIABLE , arguments','arguments',4,'p_arguments_names_recursion','mini_c.py',102),
  ('arguments -> TYPE','arguments',1,'p_argunments_types_one','mini_c.py',106),
  ('arguments -> TYPE , arguments','arguments',3,'p_arguments_types_recursion','mini_c.py',110),
  ('body -> line body','body',2,'p_body_line_body','mini_c.py',119),
  ('body -> empty','body',1,'p_body_empty','mini_c.py',123),
  ('line -> declaration','line',1,'p_line_declaration','mini_c.py',138),
  ('line -> assignment','line',1,'p_line_assignment','mini_c.py',142),
  ('line -> if_clause','line',1,'p_line_if_clause','mini_c.py',146),
  ('declaration -> TYPE variable_list ;','declaration',3,'p_declaration','mini_c.py',150),
  ('variable_list -> VARIABLE','variable_list',1,'p_variable_list_one','mini_c.py',154),
  ('variable_list -> VARIABLE , variable_list','variable_list',3,'p_variable_list_recursion','mini_c.py',158),
  ('assignment -> VARIABLE = expr_1 ;','assignment',4,'p_assignment','mini_c.py',162),
  ('expr_1 -> expr_2 > expr_1','expr_1',3,'p_expr_1_lr','mini_c.py',173),
  ('expr_1 -> expr_2 < expr_1','expr_1',3,'p_expr_1_lr','mini_c.py',174),
  ('expr_1 -> expr_2','expr_1',1,'p_expr_1_2','mini_c.py',184),
  ('expr_2 -> expr_3 PLUS expr_2','expr_2',3,'p_expr_2_lr','mini_c.py',190),
  ('expr_2 -> expr_3 - expr_2','expr_2',3,'p_expr_2_lr','mini_c.py',191),
  ('expr_2 -> expr_3','expr_2',1,'p_expr_2_3','mini_c.py',202),
  ('expr_3 -> expr_4 * expr_3','expr_3',3,'p_expr_3_lr','mini_c.py',208),
  ('expr_3 -> expr_4 / expr_3','expr_3',3,'p_expr_3_lr','mini_c.py',209),
  ('expr_3 -> expr_4','expr_3',1,'p_expr_3_4','mini_c.py',220),
  ('expr_4 -> - expr_5','expr_4',2,'p_expr_4','mini_c.py',226),
  ('expr_4 -> expr_5','expr_4',1,'p_expr_4','mini_c.py',227),
  ('expr_5 -> VARIABLE INCR','expr_5',2,'p_expr_5_incr','mini_c.py',240),
  ('expr_5 -> expr_6','expr_5',1,'p_expr_5_6','mini_c.py',250),
  ('expr_6 -> INTEGER','expr_6',1,'p_expr_6','mini_c.py',257),
  ('expr_6 -> VARIABLE','expr_6',1,'p_expr_6','mini_c.py',258),
  ('expr_6 -> ( expr_1 )','expr_6',3,'p_expr_6','mini_c.py',259),
  ('if_clause -> IF ( expr_1 ) { body }','if_clause',7,'p_if_only','mini_c.py',271),
  ('empty -> <empty>','empty',0,'p_empty','mini_c.py',282),
]
