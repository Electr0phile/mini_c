
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "DIGIT_STRING FLOAT FLOAT_STRING FLOAT_TYPE FOR IF INCR INTEGER INT_TYPE PLUS PRINTF RETURN STRING VARIABLE VOID_TYPE function_list : function function_list  function_list : empty  function : type_func VARIABLE '(' arguments ')' '{' body '}'  arguments : arguments_rec  arguments_rec : type_var variable_or_pointer  arguments_rec : type_var variable_or_pointer ',' arguments_rec  arguments : VOID_TYPE  arguments : empty body : line bodybody : emptyline : declarationline : assignmentline : if_clauseline : for_loop line : expr_line line : return_exprline : printf_exprdeclaration : type_var variable_list ';' \n    variable_list : variable_or_pointer\n                  | array\n    \n    variable_list : variable_or_pointer ',' variable_list\n                  | array ',' variable_list\n    \n    assignment : variable_or_pointer '=' expr_1 ';'\n               | array '=' expr_1 ';'\n    \n    assignment : variable_or_pointer '=' '&' VARIABLE ';'\n               | array '=' '&' VARIABLE ';'\n     return_expr : RETURN expr_1 ';'  return_expr : RETURN ';'  expr_line : expr_1 ';' \n    printf_expr : PRINTF '(' STRING  ')' ';'\n                | PRINTF '(' digit ')' ';'\n                | PRINTF '(' float ')' ';'\n\n    \n    digit : DIGIT_STRING ',' expr_1\n    \n    float : FLOAT_STRING ',' expr_1\n    \n    variable_or_pointer : '*' VARIABLE\n                        | VARIABLE\n    \n    expr_1 : expr_2 '>' expr_1\n           | expr_2 '<' expr_1\n    \n    expr_1 : expr_2\n    \n    expr_2 : expr_3 PLUS expr_2\n           | expr_3 '-' expr_2\n    \n    expr_2 : expr_3\n    \n    expr_3 : expr_4 '*' expr_3\n           | expr_4 '/' expr_3\n    \n    expr_3 : expr_4\n    \n    expr_4 : '-' expr_5\n           | expr_5\n    \n    expr_5 : variable_or_pointer INCR\n    \n    expr_5 : expr_6\n    \n    expr_6 : INTEGER\n           | FLOAT\n           | variable_or_pointer\n           | function_call\n           | array\n           | '(' expr_1 ')'\n    \n    if_clause : IF '(' expr_1 ')' '{' body '}'\n    \n    for_loop : FOR '(' assignment expr_1 ';' expr_1 ')' '{' body '}'\n    function_call : VARIABLE '(' arguments_call ')' function_call : VARIABLE '(' ')'  arguments_call : expr_1  arguments_call : expr_1 ',' arguments_call  array : VARIABLE '[' expr_1 ']'  type_func : INT_TYPE\n                  | FLOAT_TYPE\n                  | VOID_TYPE  type_var  : INT_TYPE\n                  | FLOAT_TYPE line : error ';'  function : error VARIABLE '(' arguments ')' '{' body '}'  function : type_func error '(' arguments ')' '{' body '}'  function : type_func VARIABLE arguments ')' '{' body '}'  function : type_func VARIABLE '(' error ')' '{' body '}'  function : type_func VARIABLE '(' arguments '{' body '}'  function : type_func VARIABLE '(' arguments ')' body '}'  function : type_func VARIABLE '(' arguments ')' '{' error '}'  function : type_func VARIABLE '(' arguments ')' '{' body \n    assignment : error '=' expr_1 ';'\n    \n    assignment : variable_or_pointer expr_1 ';'\n               | array expr_1 ';'\n    \n    assignment : variable_or_pointer '=' error ';'\n               | array '=' error ';'\n    \n    assignment : variable_or_pointer '=' expr_1\n               | array '=' expr_1\n    \n    assignment : error '=' '&' VARIABLE ';'\n    \n    assignment : variable_or_pointer '&' VARIABLE ';'\n               | array '&' VARIABLE ';'\n    \n    assignment : variable_or_pointer '=' '&' error ';'\n               | array '=' '&' error ';'\n    \n    assignment : variable_or_pointer '=' '&' VARIABLE\n               | array '=' '&' VARIABLE\n     return_expr : RETURN error ';'  return_expr : RETURN expr_1  return_expr : RETURN  expr_line : expr_1  expr_line : error ';' \n    printf_expr : error '(' STRING  ')' ';'\n                | error '(' digit ')' ';'\n                | error '(' float ')' ';'\n\n    \n    printf_expr : PRINTF  STRING  ')' ';'\n                | PRINTF  digit ')' ';'\n                | PRINTF  float ')' ';'\n\n    \n    printf_expr : PRINTF '(' error  ')' ';'\n\n    \n    printf_expr : PRINTF '(' STRING  ';'\n                | PRINTF '(' digit  ';'\n                | PRINTF '(' float ';'\n\n    \n    printf_expr : PRINTF '(' STRING  ')'\n                | PRINTF '(' digit ')'\n                | PRINTF '(' float ')'\n\n    \n    if_clause : error '(' expr_1 ')' '{' body '}'\n    \n    if_clause : IF  expr_1 ')' '{' body '}'\n    \n    if_clause : IF '(' error ')' '{' body '}'\n    \n    if_clause : IF '(' expr_1  '{' body '}'\n    \n    if_clause : IF '(' expr_1 ')'  body '}'\n    \n    if_clause : IF '(' expr_1 ')' '{' error '}'\n    \n    if_clause : IF '(' expr_1 ')' '{' body\n    \n    for_loop : error '(' assignment expr_1 ';' expr_1 ')' '{' body '}'\n    \n    for_loop : FOR  assignment expr_1 ';' expr_1 ')' '{' body '}'\n    \n    for_loop : FOR '(' error expr_1 ';' expr_1 ')' '{' body '}'\n    \n    for_loop : FOR '(' assignment error ';' expr_1 ')' '{' body '}'\n    \n    for_loop : FOR '(' assignment expr_1  expr_1 ')' '{' body '}'\n    \n    for_loop : FOR '(' assignment expr_1 ';' error ')' '{' body '}'\n    \n    for_loop : FOR '(' assignment expr_1 ';' expr_1  '{' body '}'\n    \n    for_loop : FOR '(' assignment expr_1 ';' expr_1 ')'  body '}'\n    \n    for_loop : FOR '(' assignment expr_1 ';' expr_1 ')' '{' error '}'\n    \n    for_loop : FOR '(' assignment expr_1 ';' expr_1 ')' '{' body\n    declaration : error variable_list ';' declaration : type_var error ';' declaration : type_var variable_list empty : "
    
_lr_action_items = {'error':([0,2,4,6,7,8,13,19,20,31,32,34,36,39,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,61,62,64,65,66,67,68,69,71,74,75,79,80,81,82,84,85,88,89,90,91,92,93,95,98,99,100,103,105,110,111,113,123,126,128,133,135,136,137,138,148,149,150,151,153,155,156,158,163,166,167,177,178,179,180,181,182,183,184,185,186,187,189,196,197,198,199,201,202,203,204,206,207,208,209,211,216,217,218,219,220,221,223,224,225,229,230,232,233,234,235,236,237,238,239,242,245,249,250,251,252,255,257,258,260,267,269,270,271,272,273,274,278,279,281,284,285,286,289,290,292,293,297,298,299,300,301,302,303,],[5,5,11,-63,-64,-65,24,-66,-67,43,43,43,-35,-36,83,43,-10,-11,-12,-13,-14,-15,-16,-17,94,-52,-94,-54,107,112,-39,-42,-45,-47,-49,-50,-51,-53,43,43,43,-52,-36,-54,-76,-74,-68,-36,107,-19,-20,-9,-128,152,-48,-29,157,161,164,-92,-28,171,-46,-73,-71,-59,-55,-3,-75,-126,-18,-127,-82,200,-78,-83,205,-79,213,-27,-91,-37,-38,-40,-41,-43,-44,-72,-70,-69,-62,-58,-77,-21,-22,-23,-89,-80,-85,-24,-90,-81,-86,43,43,43,-106,-103,-107,-104,-108,-105,-99,-100,-101,-84,43,-96,-97,-98,-25,-87,-26,-88,256,43,263,-30,-31,-32,-102,-115,-113,-112,-110,-109,-56,-114,-111,43,43,43,43,43,291,43,43,43,-120,-125,-123,-122,-117,-116,-57,-124,-121,-119,-118,]),'$end':([0,1,2,3,9,36,39,41,44,45,46,47,48,49,50,51,52,54,55,56,59,61,62,64,65,66,67,68,69,79,80,81,82,84,85,88,90,91,92,93,98,99,110,111,123,126,128,133,135,136,137,138,148,149,150,153,155,158,166,167,177,178,179,180,181,182,183,184,185,186,187,189,196,197,198,199,201,202,203,204,206,207,216,217,218,219,220,221,223,224,225,229,232,233,234,235,236,237,238,239,249,250,251,252,255,257,258,260,267,269,270,271,281,289,290,292,293,297,298,299,300,301,302,303,],[-129,0,-129,-2,-1,-35,-36,-129,-129,-10,-11,-12,-13,-14,-15,-16,-17,-52,-94,-54,-93,-39,-42,-45,-47,-49,-50,-51,-53,-52,-36,-54,-76,-74,-68,-36,-19,-20,-9,-128,-48,-29,-92,-28,-46,-73,-71,-59,-55,-3,-75,-126,-18,-127,-82,-78,-83,-79,-27,-91,-37,-38,-40,-41,-43,-44,-72,-70,-69,-62,-58,-77,-21,-22,-23,-89,-80,-85,-24,-90,-81,-86,-106,-103,-107,-104,-108,-105,-99,-100,-101,-84,-96,-97,-98,-25,-87,-26,-88,-129,-30,-31,-32,-102,-115,-113,-112,-110,-109,-56,-114,-111,-129,-120,-125,-123,-122,-117,-116,-57,-124,-121,-119,-118,]),'INT_TYPE':([0,2,10,13,21,22,31,32,34,35,36,39,41,44,45,46,47,48,49,50,51,52,54,55,56,59,61,62,64,65,66,67,68,69,71,74,75,79,80,81,82,84,85,88,90,91,92,93,98,99,110,111,123,126,128,133,135,136,137,138,148,149,150,153,155,158,166,167,177,178,179,180,181,182,183,184,185,186,187,189,196,197,198,199,201,202,203,204,206,207,208,209,211,216,217,218,219,220,221,223,224,225,229,230,232,233,234,235,236,237,238,239,242,249,250,251,252,255,257,258,260,267,269,270,271,272,273,274,278,279,281,284,285,286,289,290,292,293,297,298,299,300,301,302,303,],[6,6,19,19,19,19,19,19,19,19,-35,-36,19,19,-10,-11,-12,-13,-14,-15,-16,-17,-52,-94,-54,-93,-39,-42,-45,-47,-49,-50,-51,-53,19,19,19,-52,-36,-54,-76,-74,-68,-36,-19,-20,-9,-128,-48,-29,-92,-28,-46,-73,-71,-59,-55,-3,-75,-126,-18,-127,-82,-78,-83,-79,-27,-91,-37,-38,-40,-41,-43,-44,-72,-70,-69,-62,-58,-77,-21,-22,-23,-89,-80,-85,-24,-90,-81,-86,19,19,19,-106,-103,-107,-104,-108,-105,-99,-100,-101,-84,19,-96,-97,-98,-25,-87,-26,-88,19,19,-30,-31,-32,-102,-115,-113,-112,-110,-109,-56,-114,-111,19,19,19,19,19,19,19,19,19,-120,-125,-123,-122,-117,-116,-57,-124,-121,-119,-118,]),'FLOAT_TYPE':([0,2,10,13,21,22,31,32,34,35,36,39,41,44,45,46,47,48,49,50,51,52,54,55,56,59,61,62,64,65,66,67,68,69,71,74,75,79,80,81,82,84,85,88,90,91,92,93,98,99,110,111,123,126,128,133,135,136,137,138,148,149,150,153,155,158,166,167,177,178,179,180,181,182,183,184,185,186,187,189,196,197,198,199,201,202,203,204,206,207,208,209,211,216,217,218,219,220,221,223,224,225,229,230,232,233,234,235,236,237,238,239,242,249,250,251,252,255,257,258,260,267,269,270,271,272,273,274,278,279,281,284,285,286,289,290,292,293,297,298,299,300,301,302,303,],[7,7,20,20,20,20,20,20,20,20,-35,-36,20,20,-10,-11,-12,-13,-14,-15,-16,-17,-52,-94,-54,-93,-39,-42,-45,-47,-49,-50,-51,-53,20,20,20,-52,-36,-54,-76,-74,-68,-36,-19,-20,-9,-128,-48,-29,-92,-28,-46,-73,-71,-59,-55,-3,-75,-126,-18,-127,-82,-78,-83,-79,-27,-91,-37,-38,-40,-41,-43,-44,-72,-70,-69,-62,-58,-77,-21,-22,-23,-89,-80,-85,-24,-90,-81,-86,20,20,20,-106,-103,-107,-104,-108,-105,-99,-100,-101,-84,20,-96,-97,-98,-25,-87,-26,-88,20,20,-30,-31,-32,-102,-115,-113,-112,-110,-109,-56,-114,-111,20,20,20,20,20,20,20,20,20,-120,-125,-123,-122,-117,-116,-57,-124,-121,-119,-118,]),'VOID_TYPE':([0,2,10,13,21,22,36,39,41,44,45,46,47,48,49,50,51,52,54,55,56,59,61,62,64,65,66,67,68,69,79,80,81,82,84,85,88,90,91,92,93,98,99,110,111,123,126,128,133,135,136,137,138,148,149,150,153,155,158,166,167,177,178,179,180,181,182,183,184,185,186,187,189,196,197,198,199,201,202,203,204,206,207,216,217,218,219,220,221,223,224,225,229,232,233,234,235,236,237,238,239,249,250,251,252,255,257,258,260,267,269,270,271,281,289,290,292,293,297,298,299,300,301,302,303,],[8,8,16,16,16,16,-35,-36,-129,-129,-10,-11,-12,-13,-14,-15,-16,-17,-52,-94,-54,-93,-39,-42,-45,-47,-49,-50,-51,-53,-52,-36,-54,-76,-74,-68,-36,-19,-20,-9,-128,-48,-29,-92,-28,-46,-73,-71,-59,-55,-3,-75,-126,-18,-127,-82,-78,-83,-79,-27,-91,-37,-38,-40,-41,-43,-44,-72,-70,-69,-62,-58,-77,-21,-22,-23,-89,-80,-85,-24,-90,-81,-86,-106,-103,-107,-104,-108,-105,-99,-100,-101,-84,-96,-97,-98,-25,-87,-26,-88,-129,-30,-31,-32,-102,-115,-113,-112,-110,-109,-56,-114,-111,-129,-120,-125,-123,-122,-117,-116,-57,-124,-121,-119,-118,]),'VARIABLE':([4,5,6,7,8,18,19,20,27,31,32,34,36,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,71,74,75,76,77,79,80,81,83,85,87,88,89,90,91,92,93,95,97,98,99,100,102,103,105,106,108,109,110,111,119,120,121,122,123,124,125,133,135,138,140,142,146,147,148,149,150,151,153,155,156,158,163,164,166,167,175,176,177,178,179,180,181,182,186,187,188,189,196,197,198,199,201,202,203,204,206,207,208,209,211,212,215,216,217,218,219,220,221,223,224,225,229,230,231,232,233,234,235,236,237,238,239,242,245,246,247,249,250,251,252,255,256,257,258,260,267,269,270,271,272,273,274,278,279,281,284,285,286,289,290,291,292,293,297,298,299,300,301,302,303,],[10,12,-63,-64,-65,28,-66,-67,36,39,39,39,-35,-36,80,39,88,39,-10,-11,-12,-13,-14,-15,-16,-17,88,80,-94,80,80,88,80,-39,-42,80,-45,-47,-49,-50,-51,-53,39,39,39,80,80,-52,-36,-54,88,-68,80,-36,39,-19,-20,-9,-128,80,154,-48,-29,80,159,80,88,80,80,80,-92,-28,80,80,80,80,-46,80,80,-59,-55,-126,190,80,88,88,-18,-127,-82,199,-78,-83,204,-79,80,80,-27,-91,80,80,-37,-38,-40,-41,-43,-44,-62,-58,80,-77,-21,-22,-23,-89,-80,-85,-24,-90,-81,-86,39,39,39,80,80,-106,-103,-107,-104,-108,-105,-99,-100,-101,-84,39,80,-96,-97,-98,-25,-87,-26,-88,39,39,80,80,80,-30,-31,-32,-102,-115,88,-113,-112,-110,-109,-56,-114,-111,39,39,39,39,39,39,39,39,39,-120,-125,88,-123,-122,-117,-116,-57,-124,-121,-119,-118,]),'(':([10,11,12,31,32,34,36,39,40,41,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,74,75,76,77,79,80,81,83,85,87,88,89,90,91,92,93,95,98,99,100,103,106,108,109,110,111,119,120,121,122,123,124,125,133,135,138,142,148,149,150,153,155,158,163,164,166,167,175,176,177,178,179,180,181,182,186,187,188,189,196,197,198,199,201,202,203,204,206,207,208,209,211,212,215,216,217,218,219,220,221,223,224,225,229,230,231,232,233,234,235,236,237,238,239,242,245,246,247,249,250,251,252,255,256,257,258,260,267,269,270,271,272,273,274,278,279,281,284,285,286,289,290,291,292,293,297,298,299,300,301,302,303,],[13,21,22,40,40,40,-35,77,40,40,89,40,-10,-11,-12,-13,-14,-15,-16,-17,40,-94,40,103,105,40,113,-39,-42,40,-45,-47,-49,-50,-51,-53,40,40,40,40,40,-52,77,-54,89,-68,40,-36,40,-19,-20,-9,-128,40,-48,-29,40,40,40,40,40,-92,-28,40,40,40,40,-46,40,40,-59,-55,-126,40,-18,-127,-82,-78,-83,-79,40,40,-27,-91,40,40,-37,-38,-40,-41,-43,-44,-62,-58,40,-77,-21,-22,-23,-89,-80,-85,-24,-90,-81,-86,40,40,40,40,40,-106,-103,-107,-104,-108,-105,-99,-100,-101,-84,40,40,-96,-97,-98,-25,-87,-26,-88,40,40,40,40,40,-30,-31,-32,-102,-115,89,-113,-112,-110,-109,-56,-114,-111,40,40,40,40,40,40,40,40,40,-120,-125,89,-123,-122,-117,-116,-57,-124,-121,-119,-118,]),')':([10,13,14,15,16,17,21,22,23,24,26,28,29,30,36,39,54,56,61,62,64,65,66,67,68,69,73,77,78,79,80,81,98,104,114,115,116,123,132,133,134,135,141,143,144,145,160,161,168,169,170,171,177,178,179,180,181,182,186,187,208,226,227,228,244,248,254,262,263,264,265,],[-129,-129,25,-4,-7,-8,-129,-129,31,33,-5,-36,37,38,-35,-36,-52,-54,-39,-42,-45,-47,-49,-50,-51,-53,-6,133,135,-52,-36,-54,-48,162,172,173,174,-46,187,-59,-60,-55,191,193,194,195,208,210,216,218,220,222,-37,-38,-40,-41,-43,-44,-62,-58,-55,-33,-34,-61,261,266,268,273,275,276,277,]),'{':([13,15,16,17,23,25,26,28,31,33,36,37,38,61,62,64,65,66,67,68,69,73,79,80,81,98,123,133,135,160,162,177,178,179,180,181,182,186,187,191,208,210,261,262,266,268,273,275,276,277,],[-129,-4,-7,-8,32,34,-5,-36,41,71,-35,74,75,-39,-42,-45,-47,-49,-50,-51,-53,-6,-52,-36,-54,-48,-46,-59,-55,209,211,-37,-38,-40,-41,-43,-44,-62,-58,230,239,242,272,274,278,279,281,284,285,286,]),'*':([18,19,20,31,32,34,36,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,71,74,75,76,77,79,80,81,83,85,87,88,89,90,91,92,93,95,98,99,100,103,105,106,108,109,110,111,119,120,121,122,123,124,125,133,135,138,142,146,147,148,149,150,153,155,158,163,164,166,167,175,176,177,178,179,180,181,182,186,187,188,189,196,197,198,199,201,202,203,204,206,207,208,209,211,212,215,216,217,218,219,220,221,223,224,225,229,230,231,232,233,234,235,236,237,238,239,242,245,246,247,249,250,251,252,255,256,257,258,260,267,269,270,271,272,273,274,278,279,281,284,285,286,289,290,291,292,293,297,298,299,300,301,302,303,],[27,-66,-67,27,27,27,-35,-36,27,27,27,27,-10,-11,-12,-13,-14,-15,-16,-17,27,27,-94,27,27,27,27,-39,-42,27,124,-47,-49,-50,-51,-53,27,27,27,27,27,-52,-36,-54,27,-68,27,-36,27,-19,-20,-9,-128,27,-48,-29,27,27,27,27,27,27,-92,-28,27,27,27,27,-46,27,27,-59,-55,-126,27,27,27,-18,-127,-82,-78,-83,-79,27,27,-27,-91,27,27,-37,-38,-40,-41,-43,-44,-62,-58,27,-77,-21,-22,-23,-89,-80,-85,-24,-90,-81,-86,27,27,27,27,27,-106,-103,-107,-104,-108,-105,-99,-100,-101,-84,27,27,-96,-97,-98,-25,-87,-26,-88,27,27,27,27,27,-30,-31,-32,-102,-115,27,-113,-112,-110,-109,-56,-114,-111,27,27,27,27,27,27,27,27,27,-120,-125,27,-123,-122,-117,-116,-57,-124,-121,-119,-118,]),',':([26,28,36,61,62,64,65,66,67,68,69,79,80,81,88,90,91,98,117,118,123,133,134,135,177,178,179,180,181,182,186,187,],[35,-36,-35,-39,-42,-45,-47,-49,-50,-51,-53,-52,-36,-54,-36,146,147,-48,175,176,-46,-59,188,-55,-37,-38,-40,-41,-43,-44,-62,-58,]),'}':([31,32,34,36,39,41,42,44,45,46,47,48,49,50,51,52,54,55,56,59,61,62,64,65,66,67,68,69,70,71,72,74,75,79,80,81,82,83,85,88,90,91,92,93,98,99,110,111,123,127,129,130,133,135,138,148,149,150,153,155,158,166,167,177,178,179,180,181,182,186,187,189,196,197,198,199,201,202,203,204,206,207,208,209,211,216,217,218,219,220,221,223,224,225,229,230,232,233,234,235,236,237,238,239,240,241,242,243,249,250,251,252,253,255,256,257,258,259,260,267,269,270,271,272,273,274,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,],[-129,-129,-129,-35,-36,-129,84,-129,-10,-11,-12,-13,-14,-15,-16,-17,-52,-94,-54,-93,-39,-42,-45,-47,-49,-50,-51,-53,126,-129,128,-129,-129,-52,-36,-54,136,137,-68,-36,-19,-20,-9,-128,-48,-29,-92,-28,-46,183,184,185,-59,-55,-126,-18,-127,-82,-78,-83,-79,-27,-91,-37,-38,-40,-41,-43,-44,-62,-58,-77,-21,-22,-23,-89,-80,-85,-24,-90,-81,-86,-129,-129,-129,-106,-103,-107,-104,-108,-105,-99,-100,-101,-84,-129,-96,-97,-98,-25,-87,-26,-88,-129,257,258,-129,260,-30,-31,-32,-102,267,269,270,-113,-112,271,-110,-109,-56,-114,-111,-129,-129,-129,-129,-129,289,-129,292,293,-129,-129,-129,297,298,-120,299,300,-123,-122,301,302,303,-117,-116,-57,-124,-121,-119,-118,]),'IF':([31,32,34,36,39,41,44,45,46,47,48,49,50,51,52,54,55,56,59,61,62,64,65,66,67,68,69,71,74,75,79,80,81,85,88,90,91,92,93,98,99,110,111,123,133,135,138,148,149,150,153,155,158,166,167,177,178,179,180,181,182,186,187,189,196,197,198,199,201,202,203,204,206,207,208,209,211,216,217,218,219,220,221,223,224,225,229,230,232,233,234,235,236,237,238,239,242,249,250,251,252,255,257,258,260,267,269,270,271,272,273,274,278,279,281,284,285,286,289,290,292,293,297,298,299,300,301,302,303,],[57,57,57,-35,-36,57,57,-10,-11,-12,-13,-14,-15,-16,-17,-52,-94,-54,-93,-39,-42,-45,-47,-49,-50,-51,-53,57,57,57,-52,-36,-54,-68,-36,-19,-20,-9,-128,-48,-29,-92,-28,-46,-59,-55,-126,-18,-127,-82,-78,-83,-79,-27,-91,-37,-38,-40,-41,-43,-44,-62,-58,-77,-21,-22,-23,-89,-80,-85,-24,-90,-81,-86,57,57,57,-106,-103,-107,-104,-108,-105,-99,-100,-101,-84,57,-96,-97,-98,-25,-87,-26,-88,57,57,-30,-31,-32,-102,-115,-113,-112,-110,-109,-56,-114,-111,57,57,57,57,57,57,57,57,57,-120,-125,-123,-122,-117,-116,-57,-124,-121,-119,-118,]),'FOR':([31,32,34,36,39,41,44,45,46,47,48,49,50,51,52,54,55,56,59,61,62,64,65,66,67,68,69,71,74,75,79,80,81,85,88,90,91,92,93,98,99,110,111,123,133,135,138,148,149,150,153,155,158,166,167,177,178,179,180,181,182,186,187,189,196,197,198,199,201,202,203,204,206,207,208,209,211,216,217,218,219,220,221,223,224,225,229,230,232,233,234,235,236,237,238,239,242,249,250,251,252,255,257,258,260,267,269,270,271,272,273,274,278,279,281,284,285,286,289,290,292,293,297,298,299,300,301,302,303,],[58,58,58,-35,-36,58,58,-10,-11,-12,-13,-14,-15,-16,-17,-52,-94,-54,-93,-39,-42,-45,-47,-49,-50,-51,-53,58,58,58,-52,-36,-54,-68,-36,-19,-20,-9,-128,-48,-29,-92,-28,-46,-59,-55,-126,-18,-127,-82,-78,-83,-79,-27,-91,-37,-38,-40,-41,-43,-44,-62,-58,-77,-21,-22,-23,-89,-80,-85,-24,-90,-81,-86,58,58,58,-106,-103,-107,-104,-108,-105,-99,-100,-101,-84,58,-96,-97,-98,-25,-87,-26,-88,58,58,-30,-31,-32,-102,-115,-113,-112,-110,-109,-56,-114,-111,58,58,58,58,58,58,58,58,58,-120,-125,-123,-122,-117,-116,-57,-124,-121,-119,-118,]),'RETURN':([31,32,34,36,39,41,44,45,46,47,48,49,50,51,52,54,55,56,59,61,62,64,65,66,67,68,69,71,74,75,79,80,81,85,88,90,91,92,93,98,99,110,111,123,133,135,138,148,149,150,153,155,158,166,167,177,178,179,180,181,182,186,187,189,196,197,198,199,201,202,203,204,206,207,208,209,211,216,217,218,219,220,221,223,224,225,229,230,232,233,234,235,236,237,238,239,242,249,250,251,252,255,257,258,260,267,269,270,271,272,273,274,278,279,281,284,285,286,289,290,292,293,297,298,299,300,301,302,303,],[59,59,59,-35,-36,59,59,-10,-11,-12,-13,-14,-15,-16,-17,-52,-94,-54,-93,-39,-42,-45,-47,-49,-50,-51,-53,59,59,59,-52,-36,-54,-68,-36,-19,-20,-9,-128,-48,-29,-92,-28,-46,-59,-55,-126,-18,-127,-82,-78,-83,-79,-27,-91,-37,-38,-40,-41,-43,-44,-62,-58,-77,-21,-22,-23,-89,-80,-85,-24,-90,-81,-86,59,59,59,-106,-103,-107,-104,-108,-105,-99,-100,-101,-84,59,-96,-97,-98,-25,-87,-26,-88,59,59,-30,-31,-32,-102,-115,-113,-112,-110,-109,-56,-114,-111,59,59,59,59,59,59,59,59,59,-120,-125,-123,-122,-117,-116,-57,-124,-121,-119,-118,]),'PRINTF':([31,32,34,36,39,41,44,45,46,47,48,49,50,51,52,54,55,56,59,61,62,64,65,66,67,68,69,71,74,75,79,80,81,85,88,90,91,92,93,98,99,110,111,123,133,135,138,148,149,150,153,155,158,166,167,177,178,179,180,181,182,186,187,189,196,197,198,199,201,202,203,204,206,207,208,209,211,216,217,218,219,220,221,223,224,225,229,230,232,233,234,235,236,237,238,239,242,249,250,251,252,255,257,258,260,267,269,270,271,272,273,274,278,279,281,284,285,286,289,290,292,293,297,298,299,300,301,302,303,],[60,60,60,-35,-36,60,60,-10,-11,-12,-13,-14,-15,-16,-17,-52,-94,-54,-93,-39,-42,-45,-47,-49,-50,-51,-53,60,60,60,-52,-36,-54,-68,-36,-19,-20,-9,-128,-48,-29,-92,-28,-46,-59,-55,-126,-18,-127,-82,-78,-83,-79,-27,-91,-37,-38,-40,-41,-43,-44,-62,-58,-77,-21,-22,-23,-89,-80,-85,-24,-90,-81,-86,60,60,60,-106,-103,-107,-104,-108,-105,-99,-100,-101,-84,60,-96,-97,-98,-25,-87,-26,-88,60,60,-30,-31,-32,-102,-115,-113,-112,-110,-109,-56,-114,-111,60,60,60,60,60,60,60,60,60,-120,-125,-123,-122,-117,-116,-57,-124,-121,-119,-118,]),'-':([31,32,34,36,39,40,41,44,45,46,47,48,49,50,51,52,54,55,56,57,59,61,62,64,65,66,67,68,69,71,74,75,76,77,79,80,81,85,87,88,89,90,91,92,93,95,98,99,100,103,106,108,109,110,111,119,120,121,122,123,124,125,133,135,138,142,148,149,150,153,155,158,163,164,166,167,175,176,177,178,179,180,181,182,186,187,188,189,196,197,198,199,201,202,203,204,206,207,208,209,211,212,215,216,217,218,219,220,221,223,224,225,229,230,231,232,233,234,235,236,237,238,239,242,245,246,247,249,250,251,252,255,257,258,260,267,269,270,271,272,273,274,278,279,281,284,285,286,289,290,292,293,297,298,299,300,301,302,303,],[63,63,63,-35,-36,63,63,63,-10,-11,-12,-13,-14,-15,-16,-17,63,-94,63,63,63,-39,122,-45,-47,-49,-50,-51,-53,63,63,63,63,63,-52,-36,-54,-68,63,-36,63,-19,-20,-9,-128,63,-48,-29,63,63,63,63,63,-92,-28,63,63,63,63,-46,63,63,-59,-55,-126,63,-18,-127,-82,-78,-83,-79,63,63,-27,-91,63,63,-37,-38,-40,-41,-43,-44,-62,-58,63,-77,-21,-22,-23,-89,-80,-85,-24,-90,-81,-86,63,63,63,63,63,-106,-103,-107,-104,-108,-105,-99,-100,-101,-84,63,63,-96,-97,-98,-25,-87,-26,-88,63,63,63,63,63,-30,-31,-32,-102,-115,-113,-112,-110,-109,-56,-114,-111,63,63,63,63,63,63,63,63,63,-120,-125,-123,-122,-117,-116,-57,-124,-121,-119,-118,]),'INTEGER':([31,32,34,36,39,40,41,44,45,46,47,48,49,50,51,52,54,55,56,57,59,61,62,63,64,65,66,67,68,69,71,74,75,76,77,79,80,81,85,87,88,89,90,91,92,93,95,98,99,100,103,106,108,109,110,111,119,120,121,122,123,124,125,133,135,138,142,148,149,150,153,155,158,163,164,166,167,175,176,177,178,179,180,181,182,186,187,188,189,196,197,198,199,201,202,203,204,206,207,208,209,211,212,215,216,217,218,219,220,221,223,224,225,229,230,231,232,233,234,235,236,237,238,239,242,245,246,247,249,250,251,252,255,257,258,260,267,269,270,271,272,273,274,278,279,281,284,285,286,289,290,292,293,297,298,299,300,301,302,303,],[67,67,67,-35,-36,67,67,67,-10,-11,-12,-13,-14,-15,-16,-17,67,-94,67,67,67,-39,-42,67,-45,-47,-49,-50,-51,-53,67,67,67,67,67,-52,-36,-54,-68,67,-36,67,-19,-20,-9,-128,67,-48,-29,67,67,67,67,67,-92,-28,67,67,67,67,-46,67,67,-59,-55,-126,67,-18,-127,-82,-78,-83,-79,67,67,-27,-91,67,67,-37,-38,-40,-41,-43,-44,-62,-58,67,-77,-21,-22,-23,-89,-80,-85,-24,-90,-81,-86,67,67,67,67,67,-106,-103,-107,-104,-108,-105,-99,-100,-101,-84,67,67,-96,-97,-98,-25,-87,-26,-88,67,67,67,67,67,-30,-31,-32,-102,-115,-113,-112,-110,-109,-56,-114,-111,67,67,67,67,67,67,67,67,67,-120,-125,-123,-122,-117,-116,-57,-124,-121,-119,-118,]),'FLOAT':([31,32,34,36,39,40,41,44,45,46,47,48,49,50,51,52,54,55,56,57,59,61,62,63,64,65,66,67,68,69,71,74,75,76,77,79,80,81,85,87,88,89,90,91,92,93,95,98,99,100,103,106,108,109,110,111,119,120,121,122,123,124,125,133,135,138,142,148,149,150,153,155,158,163,164,166,167,175,176,177,178,179,180,181,182,186,187,188,189,196,197,198,199,201,202,203,204,206,207,208,209,211,212,215,216,217,218,219,220,221,223,224,225,229,230,231,232,233,234,235,236,237,238,239,242,245,246,247,249,250,251,252,255,257,258,260,267,269,270,271,272,273,274,278,279,281,284,285,286,289,290,292,293,297,298,299,300,301,302,303,],[68,68,68,-35,-36,68,68,68,-10,-11,-12,-13,-14,-15,-16,-17,68,-94,68,68,68,-39,-42,68,-45,-47,-49,-50,-51,-53,68,68,68,68,68,-52,-36,-54,-68,68,-36,68,-19,-20,-9,-128,68,-48,-29,68,68,68,68,68,-92,-28,68,68,68,68,-46,68,68,-59,-55,-126,68,-18,-127,-82,-78,-83,-79,68,68,-27,-91,68,68,-37,-38,-40,-41,-43,-44,-62,-58,68,-77,-21,-22,-23,-89,-80,-85,-24,-90,-81,-86,68,68,68,68,68,-106,-103,-107,-104,-108,-105,-99,-100,-101,-84,68,68,-96,-97,-98,-25,-87,-26,-88,68,68,68,68,68,-30,-31,-32,-102,-115,-113,-112,-110,-109,-56,-114,-111,68,68,68,68,68,68,68,68,68,-120,-125,-123,-122,-117,-116,-57,-124,-121,-119,-118,]),'=':([36,39,43,54,56,83,88,107,108,109,164,186,256,291,],[-35,-36,87,95,100,87,-36,87,95,100,87,-62,87,87,]),'&':([36,39,54,56,87,88,95,100,108,109,186,],[-35,-36,97,102,140,-36,151,156,97,102,-62,]),'INCR':([36,39,54,79,80,],[-35,-36,98,98,-36,]),'/':([36,39,54,56,64,65,66,67,68,69,79,80,81,98,123,133,135,186,187,208,],[-35,-36,-52,-54,125,-47,-49,-50,-51,-53,-52,-36,-54,-48,-46,-59,-55,-62,-58,-55,]),'PLUS':([36,39,54,56,62,64,65,66,67,68,69,79,80,81,98,123,133,135,181,182,186,187,208,],[-35,-36,-52,-54,121,-45,-47,-49,-50,-51,-53,-52,-36,-54,-48,-46,-59,-55,-43,-44,-62,-58,-55,]),'>':([36,39,54,56,61,62,64,65,66,67,68,69,79,80,81,98,123,133,135,179,180,181,182,186,187,208,],[-35,-36,-52,-54,119,-42,-45,-47,-49,-50,-51,-53,-52,-36,-54,-48,-46,-59,-55,-40,-41,-43,-44,-62,-58,-55,]),'<':([36,39,54,56,61,62,64,65,66,67,68,69,79,80,81,98,123,133,135,179,180,181,182,186,187,208,],[-35,-36,-52,-54,120,-42,-45,-47,-49,-50,-51,-53,-52,-36,-54,-48,-46,-59,-55,-40,-41,-43,-44,-62,-58,-55,]),';':([36,39,43,54,55,56,59,61,62,64,65,66,67,68,69,79,80,81,83,86,88,90,91,93,94,96,98,101,110,112,123,133,135,139,150,152,154,155,157,159,165,168,169,170,172,173,174,177,178,179,180,181,182,186,187,190,192,193,194,195,196,197,199,200,204,205,212,213,214,216,218,220,222,226,227,256,291,],[-35,-36,85,-52,99,-54,111,-39,-42,-45,-47,-49,-50,-51,-53,-52,-36,-54,85,138,-36,-19,-20,148,149,153,-48,158,166,167,-46,-59,-55,189,198,201,202,203,206,207,215,217,219,221,223,224,225,-37,-38,-40,-41,-43,-44,-62,-58,229,231,232,233,234,-21,-22,235,236,237,238,245,246,247,249,250,251,252,-33,-34,85,85,]),']':([36,61,62,64,65,66,67,68,69,79,80,81,98,123,131,133,135,177,178,179,180,181,182,186,187,],[-35,-39,-42,-45,-47,-49,-50,-51,-53,-52,-36,-54,-48,-46,186,-59,-55,-37,-38,-40,-41,-43,-44,-62,-58,]),'[':([39,80,88,],[76,76,76,]),'STRING':([60,89,113,],[114,143,168,]),'DIGIT_STRING':([60,89,113,],[117,117,117,]),'FLOAT_STRING':([60,89,113,],[118,118,118,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function_list':([0,2,],[1,9,]),'function':([0,2,],[2,2,]),'empty':([0,2,10,13,21,22,31,32,34,41,44,71,74,75,208,209,211,230,239,242,272,273,274,278,279,281,284,285,286,],[3,3,17,17,17,17,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'type_func':([0,2,],[4,4,]),'arguments':([10,13,21,22,],[14,23,29,30,]),'arguments_rec':([10,13,21,22,35,],[15,15,15,15,73,]),'type_var':([10,13,21,22,31,32,34,35,41,44,71,74,75,208,209,211,230,239,242,272,273,274,278,279,281,284,285,286,],[18,18,18,18,53,53,53,18,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'variable_or_pointer':([18,31,32,34,40,41,43,44,53,54,56,57,58,59,63,71,74,75,76,77,83,87,89,95,100,103,105,106,108,109,119,120,121,122,124,125,142,146,147,163,164,175,176,188,208,209,211,212,215,230,231,239,242,245,246,247,256,272,273,274,278,279,281,284,285,286,291,],[26,54,54,54,79,54,90,54,90,79,79,79,108,79,79,54,54,54,79,79,90,79,54,79,79,79,108,79,79,79,79,79,79,79,79,79,79,90,90,79,79,79,79,79,54,54,54,79,79,54,79,54,54,79,79,79,90,54,54,54,54,54,54,54,54,54,90,]),'body':([31,32,34,41,44,71,74,75,208,209,211,230,239,242,272,273,274,278,279,281,284,285,286,],[42,70,72,82,92,127,129,130,240,241,243,253,255,259,280,282,283,287,288,290,294,295,296,]),'line':([31,32,34,41,44,71,74,75,208,209,211,230,239,242,272,273,274,278,279,281,284,285,286,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'declaration':([31,32,34,41,44,71,74,75,208,209,211,230,239,242,272,273,274,278,279,281,284,285,286,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'assignment':([31,32,34,41,44,58,71,74,75,89,105,208,209,211,230,239,242,272,273,274,278,279,281,284,285,286,],[47,47,47,47,47,106,47,47,47,142,163,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'if_clause':([31,32,34,41,44,71,74,75,208,209,211,230,239,242,272,273,274,278,279,281,284,285,286,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'for_loop':([31,32,34,41,44,71,74,75,208,209,211,230,239,242,272,273,274,278,279,281,284,285,286,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'expr_line':([31,32,34,41,44,71,74,75,208,209,211,230,239,242,272,273,274,278,279,281,284,285,286,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'return_expr':([31,32,34,41,44,71,74,75,208,209,211,230,239,242,272,273,274,278,279,281,284,285,286,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'printf_expr':([31,32,34,41,44,71,74,75,208,209,211,230,239,242,272,273,274,278,279,281,284,285,286,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'expr_1':([31,32,34,40,41,44,54,56,57,59,71,74,75,76,77,87,89,95,100,103,106,108,109,119,120,142,163,164,175,176,188,208,209,211,212,215,230,231,239,242,245,246,247,272,273,274,278,279,281,284,285,286,],[55,55,55,78,55,55,96,101,104,110,55,55,55,131,134,139,141,150,155,160,165,96,101,177,178,192,212,214,226,227,134,55,55,55,244,248,55,254,55,55,262,264,265,55,55,55,55,55,55,55,55,55,]),'array':([31,32,34,40,41,43,44,53,54,56,57,58,59,63,71,74,75,76,77,83,87,89,95,100,103,105,106,108,109,119,120,121,122,124,125,142,146,147,163,164,175,176,188,208,209,211,212,215,230,231,239,242,245,246,247,256,272,273,274,278,279,281,284,285,286,291,],[56,56,56,81,56,91,56,91,81,81,81,109,81,81,56,56,56,81,81,91,81,56,81,81,81,109,81,81,81,81,81,81,81,81,81,81,91,91,81,81,81,81,81,56,56,56,81,81,56,81,56,56,81,81,81,91,56,56,56,56,56,56,56,56,56,91,]),'expr_2':([31,32,34,40,41,44,54,56,57,59,71,74,75,76,77,87,89,95,100,103,106,108,109,119,120,121,122,142,163,164,175,176,188,208,209,211,212,215,230,231,239,242,245,246,247,272,273,274,278,279,281,284,285,286,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,179,180,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'expr_3':([31,32,34,40,41,44,54,56,57,59,71,74,75,76,77,87,89,95,100,103,106,108,109,119,120,121,122,124,125,142,163,164,175,176,188,208,209,211,212,215,230,231,239,242,245,246,247,272,273,274,278,279,281,284,285,286,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,181,182,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'expr_4':([31,32,34,40,41,44,54,56,57,59,71,74,75,76,77,87,89,95,100,103,106,108,109,119,120,121,122,124,125,142,163,164,175,176,188,208,209,211,212,215,230,231,239,242,245,246,247,272,273,274,278,279,281,284,285,286,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'expr_5':([31,32,34,40,41,44,54,56,57,59,63,71,74,75,76,77,87,89,95,100,103,106,108,109,119,120,121,122,124,125,142,163,164,175,176,188,208,209,211,212,215,230,231,239,242,245,246,247,272,273,274,278,279,281,284,285,286,],[65,65,65,65,65,65,65,65,65,65,123,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'expr_6':([31,32,34,40,41,44,54,56,57,59,63,71,74,75,76,77,87,89,95,100,103,106,108,109,119,120,121,122,124,125,142,163,164,175,176,188,208,209,211,212,215,230,231,239,242,245,246,247,272,273,274,278,279,281,284,285,286,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'function_call':([31,32,34,40,41,44,54,56,57,59,63,71,74,75,76,77,87,89,95,100,103,106,108,109,119,120,121,122,124,125,142,163,164,175,176,188,208,209,211,212,215,230,231,239,242,245,246,247,272,273,274,278,279,281,284,285,286,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'variable_list':([43,53,83,146,147,256,291,],[86,93,86,196,197,86,86,]),'digit':([60,89,113,],[115,144,169,]),'float':([60,89,113,],[116,145,170,]),'arguments_call':([77,188,],[132,228,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> function_list","S'",1,None,None,None),
  ('function_list -> function function_list','function_list',2,'p_function_list','parserkek.py',82),
  ('function_list -> empty','function_list',1,'p_function_list_empty','parserkek.py',86),
  ('function -> type_func VARIABLE ( arguments ) { body }','function',8,'p_function_body','parserkek.py',102),
  ('arguments -> arguments_rec','arguments',1,'p_argunments_rec','parserkek.py',112),
  ('arguments_rec -> type_var variable_or_pointer','arguments_rec',2,'p_argunments_names_one','parserkek.py',116),
  ('arguments_rec -> type_var variable_or_pointer , arguments_rec','arguments_rec',4,'p_arguments_names_recursion','parserkek.py',120),
  ('arguments -> VOID_TYPE','arguments',1,'p_arguments_void','parserkek.py',124),
  ('arguments -> empty','arguments',1,'p_arguments_empty','parserkek.py',128),
  ('body -> line body','body',2,'p_body_line_body','parserkek.py',136),
  ('body -> empty','body',1,'p_body_empty','parserkek.py',140),
  ('line -> declaration','line',1,'p_line_declaration','parserkek.py',155),
  ('line -> assignment','line',1,'p_line_assignment','parserkek.py',159),
  ('line -> if_clause','line',1,'p_line_if_clause','parserkek.py',163),
  ('line -> for_loop','line',1,'p_line_for_loop','parserkek.py',167),
  ('line -> expr_line','line',1,'p_line_expr','parserkek.py',171),
  ('line -> return_expr','line',1,'p_line_return','parserkek.py',175),
  ('line -> printf_expr','line',1,'p_line_printf','parserkek.py',179),
  ('declaration -> type_var variable_list ;','declaration',3,'p_declaration','parserkek.py',185),
  ('variable_list -> variable_or_pointer','variable_list',1,'p_variable_list_one','parserkek.py',190),
  ('variable_list -> array','variable_list',1,'p_variable_list_one','parserkek.py',191),
  ('variable_list -> variable_or_pointer , variable_list','variable_list',3,'p_variable_list_recursion','parserkek.py',197),
  ('variable_list -> array , variable_list','variable_list',3,'p_variable_list_recursion','parserkek.py',198),
  ('assignment -> variable_or_pointer = expr_1 ;','assignment',4,'p_assignment','parserkek.py',204),
  ('assignment -> array = expr_1 ;','assignment',4,'p_assignment','parserkek.py',205),
  ('assignment -> variable_or_pointer = & VARIABLE ;','assignment',5,'p_assignment_address','parserkek.py',211),
  ('assignment -> array = & VARIABLE ;','assignment',5,'p_assignment_address','parserkek.py',212),
  ('return_expr -> RETURN expr_1 ;','return_expr',3,'p_return_expr','parserkek.py',217),
  ('return_expr -> RETURN ;','return_expr',2,'p_return_expr_empty','parserkek.py',221),
  ('expr_line -> expr_1 ;','expr_line',2,'p_expr_line','parserkek.py',225),
  ('printf_expr -> PRINTF ( STRING ) ;','printf_expr',5,'p_printf_expr_digit_float','parserkek.py',230),
  ('printf_expr -> PRINTF ( digit ) ;','printf_expr',5,'p_printf_expr_digit_float','parserkek.py',231),
  ('printf_expr -> PRINTF ( float ) ;','printf_expr',5,'p_printf_expr_digit_float','parserkek.py',232),
  ('digit -> DIGIT_STRING , expr_1','digit',3,'p_print_digit','parserkek.py',239),
  ('float -> FLOAT_STRING , expr_1','float',3,'p_print_float','parserkek.py',245),
  ('variable_or_pointer -> * VARIABLE','variable_or_pointer',2,'p_pointer','parserkek.py',253),
  ('variable_or_pointer -> VARIABLE','variable_or_pointer',1,'p_pointer','parserkek.py',254),
  ('expr_1 -> expr_2 > expr_1','expr_1',3,'p_expr_1_lr','parserkek.py',266),
  ('expr_1 -> expr_2 < expr_1','expr_1',3,'p_expr_1_lr','parserkek.py',267),
  ('expr_1 -> expr_2','expr_1',1,'p_expr_1_2','parserkek.py',277),
  ('expr_2 -> expr_3 PLUS expr_2','expr_2',3,'p_expr_2_lr','parserkek.py',283),
  ('expr_2 -> expr_3 - expr_2','expr_2',3,'p_expr_2_lr','parserkek.py',284),
  ('expr_2 -> expr_3','expr_2',1,'p_expr_2_3','parserkek.py',295),
  ('expr_3 -> expr_4 * expr_3','expr_3',3,'p_expr_3_lr','parserkek.py',301),
  ('expr_3 -> expr_4 / expr_3','expr_3',3,'p_expr_3_lr','parserkek.py',302),
  ('expr_3 -> expr_4','expr_3',1,'p_expr_3_4','parserkek.py',313),
  ('expr_4 -> - expr_5','expr_4',2,'p_expr_4','parserkek.py',319),
  ('expr_4 -> expr_5','expr_4',1,'p_expr_4','parserkek.py',320),
  ('expr_5 -> variable_or_pointer INCR','expr_5',2,'p_expr_5_incr','parserkek.py',333),
  ('expr_5 -> expr_6','expr_5',1,'p_expr_5_6','parserkek.py',343),
  ('expr_6 -> INTEGER','expr_6',1,'p_expr_6','parserkek.py',350),
  ('expr_6 -> FLOAT','expr_6',1,'p_expr_6','parserkek.py',351),
  ('expr_6 -> variable_or_pointer','expr_6',1,'p_expr_6','parserkek.py',352),
  ('expr_6 -> function_call','expr_6',1,'p_expr_6','parserkek.py',353),
  ('expr_6 -> array','expr_6',1,'p_expr_6','parserkek.py',354),
  ('expr_6 -> ( expr_1 )','expr_6',3,'p_expr_6','parserkek.py',355),
  ('if_clause -> IF ( expr_1 ) { body }','if_clause',7,'p_if_only','parserkek.py',367),
  ('for_loop -> FOR ( assignment expr_1 ; expr_1 ) { body }','for_loop',10,'p_for_loop','parserkek.py',378),
  ('function_call -> VARIABLE ( arguments_call )','function_call',4,'p_function_call','parserkek.py',390),
  ('function_call -> VARIABLE ( )','function_call',3,'p_function_call_empty','parserkek.py',394),
  ('arguments_call -> expr_1','arguments_call',1,'p_arguments_names_call_one','parserkek.py',398),
  ('arguments_call -> expr_1 , arguments_call','arguments_call',3,'p_arguments_names_call_recursion','parserkek.py',402),
  ('array -> VARIABLE [ expr_1 ]','array',4,'p_array','parserkek.py',408),
  ('type_func -> INT_TYPE','type_func',1,'p_type_func','parserkek.py',414),
  ('type_func -> FLOAT_TYPE','type_func',1,'p_type_func','parserkek.py',415),
  ('type_func -> VOID_TYPE','type_func',1,'p_type_func','parserkek.py',416),
  ('type_var -> INT_TYPE','type_var',1,'p_type_var','parserkek.py',420),
  ('type_var -> FLOAT_TYPE','type_var',1,'p_type_var','parserkek.py',421),
  ('line -> error ;','line',2,'p_line_error','parserkek.py',427),
  ('function -> error VARIABLE ( arguments ) { body }','function',8,'p_function_body_error_1','parserkek.py',432),
  ('function -> type_func error ( arguments ) { body }','function',8,'p_function_body_error_2','parserkek.py',443),
  ('function -> type_func VARIABLE arguments ) { body }','function',7,'p_function_body_error_3','parserkek.py',454),
  ('function -> type_func VARIABLE ( error ) { body }','function',8,'p_function_body_error_4','parserkek.py',465),
  ('function -> type_func VARIABLE ( arguments { body }','function',7,'p_function_body_error_5','parserkek.py',476),
  ('function -> type_func VARIABLE ( arguments ) body }','function',7,'p_function_body_error_6','parserkek.py',487),
  ('function -> type_func VARIABLE ( arguments ) { error }','function',8,'p_function_body_error_7','parserkek.py',498),
  ('function -> type_func VARIABLE ( arguments ) { body','function',7,'p_function_body_error_8','parserkek.py',509),
  ('assignment -> error = expr_1 ;','assignment',4,'p_assignment_error_1','parserkek.py',521),
  ('assignment -> variable_or_pointer expr_1 ;','assignment',3,'p_assignment_error_2','parserkek.py',528),
  ('assignment -> array expr_1 ;','assignment',3,'p_assignment_error_2','parserkek.py',529),
  ('assignment -> variable_or_pointer = error ;','assignment',4,'p_assignment_error_3','parserkek.py',536),
  ('assignment -> array = error ;','assignment',4,'p_assignment_error_3','parserkek.py',537),
  ('assignment -> variable_or_pointer = expr_1','assignment',3,'p_assignment_error_4','parserkek.py',544),
  ('assignment -> array = expr_1','assignment',3,'p_assignment_error_4','parserkek.py',545),
  ('assignment -> error = & VARIABLE ;','assignment',5,'p_assignment_address_error_1','parserkek.py',552),
  ('assignment -> variable_or_pointer & VARIABLE ;','assignment',4,'p_assignment_address_error_2','parserkek.py',559),
  ('assignment -> array & VARIABLE ;','assignment',4,'p_assignment_address_error_2','parserkek.py',560),
  ('assignment -> variable_or_pointer = & error ;','assignment',5,'p_assignment_address_error_3','parserkek.py',567),
  ('assignment -> array = & error ;','assignment',5,'p_assignment_address_error_3','parserkek.py',568),
  ('assignment -> variable_or_pointer = & VARIABLE','assignment',4,'p_assignment_address_error_4','parserkek.py',575),
  ('assignment -> array = & VARIABLE','assignment',4,'p_assignment_address_error_4','parserkek.py',576),
  ('return_expr -> RETURN error ;','return_expr',3,'p_return_expr_error_1','parserkek.py',582),
  ('return_expr -> RETURN expr_1','return_expr',2,'p_return_expr_error_2','parserkek.py',587),
  ('return_expr -> RETURN','return_expr',1,'p_return_expr_empty_error_1','parserkek.py',592),
  ('expr_line -> expr_1','expr_line',1,'p_expr_line_error_1','parserkek.py',597),
  ('expr_line -> error ;','expr_line',2,'p_expr_line_error_2','parserkek.py',602),
  ('printf_expr -> error ( STRING ) ;','printf_expr',5,'p_printf_expr_digit_float_error_1','parserkek.py',608),
  ('printf_expr -> error ( digit ) ;','printf_expr',5,'p_printf_expr_digit_float_error_1','parserkek.py',609),
  ('printf_expr -> error ( float ) ;','printf_expr',5,'p_printf_expr_digit_float_error_1','parserkek.py',610),
  ('printf_expr -> PRINTF STRING ) ;','printf_expr',4,'p_printf_expr_digit_float_error_2','parserkek.py',618),
  ('printf_expr -> PRINTF digit ) ;','printf_expr',4,'p_printf_expr_digit_float_error_2','parserkek.py',619),
  ('printf_expr -> PRINTF float ) ;','printf_expr',4,'p_printf_expr_digit_float_error_2','parserkek.py',620),
  ('printf_expr -> PRINTF ( error ) ;','printf_expr',5,'p_printf_expr_digit_float_error_3','parserkek.py',628),
  ('printf_expr -> PRINTF ( STRING ;','printf_expr',4,'p_printf_expr_digit_float_error_4','parserkek.py',636),
  ('printf_expr -> PRINTF ( digit ;','printf_expr',4,'p_printf_expr_digit_float_error_4','parserkek.py',637),
  ('printf_expr -> PRINTF ( float ;','printf_expr',4,'p_printf_expr_digit_float_error_4','parserkek.py',638),
  ('printf_expr -> PRINTF ( STRING )','printf_expr',4,'p_printf_expr_digit_float_error_5','parserkek.py',646),
  ('printf_expr -> PRINTF ( digit )','printf_expr',4,'p_printf_expr_digit_float_error_5','parserkek.py',647),
  ('printf_expr -> PRINTF ( float )','printf_expr',4,'p_printf_expr_digit_float_error_5','parserkek.py',648),
  ('if_clause -> error ( expr_1 ) { body }','if_clause',7,'p_if_only_error_1','parserkek.py',656),
  ('if_clause -> IF expr_1 ) { body }','if_clause',6,'p_if_only_error_2','parserkek.py',666),
  ('if_clause -> IF ( error ) { body }','if_clause',7,'p_if_only_error_3','parserkek.py',676),
  ('if_clause -> IF ( expr_1 { body }','if_clause',6,'p_if_only_error_4','parserkek.py',686),
  ('if_clause -> IF ( expr_1 ) body }','if_clause',6,'p_if_only_error_5','parserkek.py',696),
  ('if_clause -> IF ( expr_1 ) { error }','if_clause',7,'p_if_only_error_6','parserkek.py',706),
  ('if_clause -> IF ( expr_1 ) { body','if_clause',6,'p_if_only_error_7','parserkek.py',716),
  ('for_loop -> error ( assignment expr_1 ; expr_1 ) { body }','for_loop',10,'p_for_loop_error_1','parserkek.py',726),
  ('for_loop -> FOR assignment expr_1 ; expr_1 ) { body }','for_loop',9,'p_for_loop_error_2','parserkek.py',738),
  ('for_loop -> FOR ( error expr_1 ; expr_1 ) { body }','for_loop',10,'p_for_loop_error_3','parserkek.py',750),
  ('for_loop -> FOR ( assignment error ; expr_1 ) { body }','for_loop',10,'p_for_loop_error_4','parserkek.py',762),
  ('for_loop -> FOR ( assignment expr_1 expr_1 ) { body }','for_loop',9,'p_for_loop_error_5','parserkek.py',774),
  ('for_loop -> FOR ( assignment expr_1 ; error ) { body }','for_loop',10,'p_for_loop_error_6','parserkek.py',786),
  ('for_loop -> FOR ( assignment expr_1 ; expr_1 { body }','for_loop',9,'p_for_loop_error_7','parserkek.py',798),
  ('for_loop -> FOR ( assignment expr_1 ; expr_1 ) body }','for_loop',9,'p_for_loop_error_8','parserkek.py',810),
  ('for_loop -> FOR ( assignment expr_1 ; expr_1 ) { error }','for_loop',10,'p_for_loop_error_9','parserkek.py',822),
  ('for_loop -> FOR ( assignment expr_1 ; expr_1 ) { body','for_loop',9,'p_for_loop_error_10','parserkek.py',834),
  ('declaration -> error variable_list ;','declaration',3,'p_declaration_error_1','parserkek.py',845),
  ('declaration -> type_var error ;','declaration',3,'p_declaration_error_2','parserkek.py',850),
  ('declaration -> type_var variable_list','declaration',2,'p_declaration_error_3','parserkek.py',855),
  ('empty -> <empty>','empty',0,'p_empty','parserkek.py',863),
]
